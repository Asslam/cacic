<?php

namespace Cacic\CommonBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PropriedadeSoftwareRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PropriedadeSoftwareRepository extends EntityRepository
{

    /**
     * Retorna lista de todas as propriedades coletadas
     *
     * @return mixed
     */

    public function propPorNome( $nmSoftware ) {
        $qb = $this->createQueryBuilder('prop')
            ->select('prop')
            ->innerJoin('CacicCommonBundle:Software', 'sw', 'WITH', 'sw.idSoftware = prop.software')
            ->innerJoin('CacicCommonBundle:Computador', 'comp', 'WITH', 'prop.computador = comp.idComputador')
            ->andWhere("comp.ativo IS NULL or comp.ativo = 't'")
            ->andWhere('sw.nmSoftware = :nmSoftware')
            ->setParameter('nmSoftware', $nmSoftware);

        return $qb->getQuery()->execute();
    }


    /**
     * Busca um software pelo nome no computador
     *
     * @param $nmSoftware
     * @param $idComputador
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function softwareByName( $nmSoftware, $idComputador ) {
        $qb = $this->createQueryBuilder('prop')
            ->select('prop')
            ->innerJoin('CacicCommonBundle:classProperty', 'cp', 'WITH', 'prop.classProperty = cp.idClassProperty')
            ->innerJoin('CacicCommonBundle:Software', 'sw', 'WITH', 'sw.idSoftware = prop.software')
            ->innerJoin('CacicCommonBundle:Computador', 'comp', 'WITH', 'prop.computador = comp.idComputador')
            ->andWhere("comp.ativo IS NULL or comp.ativo = 't'")
            ->andWhere('sw.nmSoftware = :nmSoftware')
            ->andWhere('prop.computador = :idComputador')
            ->setParameter('idComputador', $idComputador)
            ->setParameter('nmSoftware', $nmSoftware);

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Gera relatÃ³rio de softwars desativados
     *
     * @return array
     */
    public function desativados( ) {
        $qb = $this->createQueryBuilder('prop')
            ->select('DISTINCT sw')
            ->innerJoin('CacicCommonBundle:classProperty', 'cp', 'WITH', 'prop.classProperty = cp.idClassProperty')
            ->innerJoin('CacicCommonBundle:Software', 'sw', 'WITH', 'sw.idSoftware = prop.software')
            ->innerJoin('CacicCommonBundle:Computador', 'comp', 'WITH', 'prop.computador = comp.idComputador')
            ->andWhere("comp.ativo IS NULL or comp.ativo = 't'")
            ->andWhere("prop.ativo = FALSE");

        return $qb->getQuery()->getArrayResult();
    }

}
