<?php

namespace Cacic\CommonBundle\Migrations;

use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Doctrine\DBAL\Migrations\AbstractMigration;
use Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
class Version20140709011331 extends AbstractMigration implements ContainerAwareInterface
{
    private $container;

    public function setContainer(ContainerInterface $container = null)
    {
        $this->container = $container;
    }

    public function up(Schema $schema)
    {
        // this up() migration is auto-generated, please modify it to your needs// this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "postgresql", "Migration can only be executed safely on 'postgresql'.");
        $logger = $this->container->get('logger');

        // Atualiza valores vazios da tabela de computadores
        $this->addSql("update computador set te_ip_computador = NULL where te_ip_computador = '';");
        $logger->info("Tabela de computadores atualizada");

        // Cria função de rede
        $this->addSql("
        CREATE OR REPLACE FUNCTION inet_to_longip(v_t INET)
RETURNS BIGINT AS
\$inet_to_longip\$
DECLARE
    t1 TEXT;
    t2 TEXT;
    t3 TEXT;
    t4 TEXT;
    i BIGINT;

BEGIN
    t1 := SPLIT_PART(HOST(v_t), '.',1);
    t2 := SPLIT_PART(HOST(v_t), '.',2);
    t3 := SPLIT_PART(HOST(v_t), '.',3);
    t4 := SPLIT_PART(HOST(v_t), '.',4);
    i := (t1::BIGINT << 24) + (t2::BIGINT << 16) +
            (t3::BIGINT << 8) + t4::BIGINT;
    RETURN i;
END;
\$inet_to_longip\$ LANGUAGE plpgsql STRICT IMMUTABLE;
        ");

        $this->addSql("
        CREATE OR REPLACE FUNCTION netmask_bits(v_i BIGINT)
RETURNS INTEGER AS
\$netmask_msb\$
DECLARE
    n INTEGER;

BEGIN
    n := (32-log(2, 4294967296 - v_i ))::integer;
    RETURN n;
END;
\$netmask_msb\$ LANGUAGE plpgsql STRICT IMMUTABLE;
        ");

        $logger->info("Funções de tratamento de dados de rede criadas");

    }

    public function down(Schema $schema)
    {
        // this down() migration is auto-generated, please modify it to your needs

    }
}

